name: Release

on:
    workflow_call:
        inputs:
            publish-tag:
                required: true
                type: string
        secrets:
            CARGO_REGISTRY_TOKEN:
                required: true

env:
    RUST_BACKTRACE: 1
    CARGO_TERM_COLOR: always

jobs:
    create-release:
        name: Create release
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'
        steps:
            - name: Checkout
              uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
              with:
                  persist-credentials: true
                  submodules: recursive

            - name: Install rust
              uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
              with:
                  toolchain: stable
                  profile: minimal
                  override: true

            - uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2

            # - name: Check semver
            #   uses: obi1kenobi/cargo-semver-checks-action@v1

            - name: Publish
              run: cargo publish -p tiktoken-rs
              env:
                  CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

            - name: Tag the version
              run: |
                  git tag "${{ inputs.publish-tag }}"
                  git push origin "${{ inputs.publish-tag }}"
            - uses: taiki-e/create-gh-release-action@72d65cee1f8033ef0c8b5d79eaf0c45c7c578ce3 # v1
              name: Create github release
              with:
                  branch: main
                  ref: refs/tags/${{ inputs.publish-tag }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    upload-binary:
        name: ${{ matrix.target }}
        needs:
            - create-release
        strategy:
            fail-fast: false
            matrix:
                include:
                    - target: x86_64-unknown-linux-gnu
                    - os: macos-latest
                      target: aarch64-apple-darwin
                    - os: macos-latest
                      target: x86_64-apple-darwin
                    - os: windows-latest
                      target: x86_64-pc-windows-msvc
        runs-on: ${{ matrix.os || 'ubuntu-latest' }}
        steps:
            - name: Checkout
              uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
              with:
                  persist-credentials: false
                  submodules: recursive

            - name: Install rust
              uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
              with:
                  toolchain: stable
                  profile: minimal
                  override: true

            # - name: Upload binary
            #   uses: taiki-e/upload-rust-binary-action@v1
            #   with:
            #       bin: tiktoken-rs
            #       target: ${{ matrix.target }}
            #       ref: refs/tags/${{ inputs.publish-tag }}
            #       tar: all
            #       zip: windows
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #       CARGO_PROFILE_RELEASE_CODEGEN_UNITS: 1
            #       CARGO_PROFILE_RELEASE_LTO: true
